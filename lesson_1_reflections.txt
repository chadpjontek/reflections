How did viewing a diff between two versions of a file help you see the bug that was introduced?
-When I looked at the output I could quickly observe the difference by locating the '+' and '-' symbols.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
-I'll be able to look back at code and see what may have caused a bug, revert to an earlier idea and so on.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
-Pros: Your saves can be meaningful and allow you to label exactly what it is you changed/added/deleted
  Cons: You may forget to save after making a logical change

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
-It makes sense to have a snapshot of how the files looked at a certain point in time especially when they relate to one another. As far as a Google Doc goes you are usually
  dealing one thing at a time.

How can you use the commands git log and git diff to view the history of files?
-Well git log will show me all the commits and I can scroll through them to find what I'm
  looking for. (Git log --stat to see a summary if changes) Git diff can be used to show
  the lines that were added/deleted.

How might using version control make you more confident to make changes that could break something?
-I'm ready to break something! ;)

Now that you have your workspace set up, what do you want to try using Git for?
I'd like to learn how to work on other people's code.